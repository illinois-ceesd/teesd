.TH "metricops" 3 "Fri Apr 10 2020" "Version 1.0" "JustKernels" \" -*- nroff -*-
.ad l
.nh
.SH NAME
metricops \- 
.SH SYNOPSIS
.br
.PP
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "subroutine \fBalphaweight\fP (\fBnumDim\fP, \fBnumPointsBuffer\fP, \fBbufferSizes\fP, \fBopInterval\fP, \fBgridType\fP, \fBgridMetric\fP, \fBalphaDir\fP, alphaW)"
.br
.ti -1c
.RI "subroutine \fBalphaweight2\fP (\fBnumDim\fP, \fBnumPointsBuffer\fP, \fBbufferSizes\fP, \fBopInterval\fP, \fBgridType\fP, \fBgridMetric\fP, \fBgridJacobian\fP, \fBalphaDir\fP, alphaW)"
.br
.ti -1c
.RI "subroutine \fBvhatcomponent\fP (\fBnumDim\fP, \fBnumPointsBuffer\fP, \fBbufferSizes\fP, \fBopInterval\fP, \fBgridType\fP, \fBgridMetric\fP, \fBvelDir\fP, \fBvelocity\fP, velHatComponent)"
.br
.ti -1c
.RI "subroutine \fBijkgradtoxyzdiv\fP (\fBnumDim\fP, \fBnumPoints\fP, \fBgridSizes\fP, \fBopInterval\fP, \fBgridType\fP, \fBgridJacobian\fP, \fBgridMetric\fP, \fBgradVBuffer\fP, \fBdivBuffer\fP)"
.br
.ti -1c
.RI "subroutine \fBgradijktogradxyz\fP (\fBnumDim\fP, \fBnumPoints\fP, \fBgridSizes\fP, \fBopInterval\fP, \fBgridType\fP, \fBgridJacobian\fP, \fBgridMetric\fP, \fBgradIJK\fP, \fBgradXYZ\fP)"
.br
.RI "Converts Cartesian (computational) gradient to physical coordinates\&. "
.ti -1c
.RI "subroutine \fBgetpointmetric\fP (\fBnumDim\fP, \fBnumPointsBuffer\fP, \fBpointID\fP, \fBgridType\fP, \fBgridMetric\fP, \fBpointMetric\fP)"
.br
.ti -1c
.RI "subroutine \fBboundarypointmetric\fP (\fBnumDim\fP, \fBnormDir\fP, \fBnumPointsBuffer\fP, \fBpointID\fP, \fBgridType\fP, \fBgridMetric\fP, \fBpointMetric\fP)"
.br
.ti -1c
.RI "subroutine \fBpointeigenvectors\fP (\fBnumDim\fP, \fBpointMetric\fP, \fBeigenVectors\fP, \fBmetricMags\fP)"
.br
.ti -1c
.RI "real(kind=8) function \fBvdot\fP (\fBnumDim\fP, u, v)"
.br
.ti -1c
.RI "subroutine \fBpointeigenvectorsgs\fP (\fBnumDim\fP, \fBpointMetric\fP, \fBeigenVectors\fP, \fBeigenComponents\fP)"
.br
.in -1c
.SH "Function/Subroutine Documentation"
.PP 
.SS "subroutine metricops::alphaweight (integer(kind=4), intent(in) numDim, integer(kind=8), intent(in) numPointsBuffer, integer(kind=8), dimension(numdim), intent(in) bufferSizes, integer(kind=8), dimension(2*numdim), intent(in) opInterval, integer(kind=4), intent(in) gridType, real(kind=8), dimension(numdim*numdim*numpointsbuffer), intent(in), target gridMetric, integer(kind=4), intent(in) alphaDir, real(kind=8), dimension(numpointsbuffer), intent(out) alphaW)"

.PP
Definition at line 15 of file MetricOps\&.f90\&.
.PP
References simple::assignmentxa(), simple::assignmentyabsx(), grid::rectilinear, and simple::veclen()\&.
.SS "subroutine metricops::alphaweight2 (integer(kind=4), intent(in) numDim, integer(kind=8), intent(in) numPointsBuffer, integer(kind=8), dimension(numdim), intent(in) bufferSizes, integer(kind=8), dimension(2*numdim), intent(in) opInterval, integer(kind=4), intent(in) gridType, real(kind=8), dimension(numdim*numdim*numpointsbuffer), intent(in), target gridMetric, real(kind=8), dimension(numpointsbuffer), intent(in), target gridJacobian, integer(kind=4), intent(in) alphaDir, real(kind=8), dimension(numpointsbuffer), intent(out) alphaW)"

.PP
Definition at line 60 of file MetricOps\&.f90\&.
.PP
References simple::assignmentxa(), simple::assignmentyabsx(), grid::rectilinear, simple::veclen(), and simple::yxy()\&.
.SS "subroutine metricops::boundarypointmetric (integer(kind=4), intent(in) numDim, integer(kind=4), intent(in) normDir, integer(kind=8), intent(in) numPointsBuffer, integer(kind=8), intent(in) pointID, integer(kind=4), intent(in) gridType, real(kind=8), dimension(numdim*numdim*numpointsbuffer), intent(in) gridMetric, real(kind=8), dimension(numdim*numdim), intent(out) pointMetric)"

.PP
Definition at line 353 of file MetricOps\&.f90\&.
.PP
References grid::curvilinear, and grid::rectilinear\&.
.PP
Referenced by satutil::farfield(), satutil::noslip_isothermal(), and satutil::slip_adiabatic()\&.
.SS "subroutine metricops::getpointmetric (integer(kind=4), intent(in) numDim, integer(kind=8), intent(in) numPointsBuffer, integer(kind=8), intent(in) pointID, integer(kind=4), intent(in) gridType, real(kind=8), dimension(numdim*numdim*numpointsbuffer), intent(in) gridMetric, real(kind=8), dimension(numdim*numdim), intent(out) pointMetric)"

.PP
Definition at line 313 of file MetricOps\&.f90\&.
.PP
References grid::curvilinear, and grid::rectilinear\&.
.SS "subroutine metricops::gradijktogradxyz (integer(kind=4), intent(in) numDim, integer(kind=8), intent(in) numPoints, integer(kind=8), dimension(numdim), intent(in) gridSizes, integer(kind=8), dimension(2*numdim), intent(in) opInterval, integer(kind=4), intent(in) gridType, real(kind=8), dimension(numpoints), intent(in) gridJacobian, real(kind=8), dimension(numdim*numdim*numpoints), intent(in), target gridMetric, real(kind=8), dimension(numdim*numpoints), intent(in), target gradIJK, real(kind=8), dimension(numdim*numpoints), intent(out), target gradXYZ)"

.PP
Converts Cartesian (computational) gradient to physical coordinates\&. 
.PP
Definition at line 240 of file MetricOps\&.f90\&.
.PP
References simple::assignmentxa(), grid::rectilinear, simple::yax(), simple::ywxpy(), simple::yxy(), and simple::zxy()\&.
.SS "subroutine metricops::ijkgradtoxyzdiv (integer(kind=4), intent(in) numDim, integer(kind=8), intent(in) numPoints, integer(kind=8), dimension(numdim), intent(in) gridSizes, integer(kind=8), dimension(2*numdim), intent(in) opInterval, integer(kind=4), intent(in) gridType, real(kind=8), dimension(numpoints), intent(in) gridJacobian, real(kind=8), dimension(numdim*numdim*numpoints), intent(in), target gridMetric, real(kind=8), dimension(numdim*numdim*numpoints), intent(in), target gradVBuffer, real(kind=8), dimension(numpoints), intent(out) divBuffer)"

.PP
Definition at line 182 of file MetricOps\&.f90\&.
.PP
References grid::rectilinear, simple::xax(), simple::yaxpy(), simple::ywxpy(), and simple::yxy()\&.
.SS "subroutine metricops::pointeigenvectors (integer(kind=4), intent(in) numDim, real(kind=8), dimension(numdim*numdim), intent(in) pointMetric, real(kind=8), dimension(numdim*numdim), intent(out) eigenVectors, real(kind=8), dimension(numdim), intent(out) metricMags)"

.PP
Definition at line 406 of file MetricOps\&.f90\&.
.PP
Referenced by satutil::farfield(), satutil::noslip_isothermal(), and satutil::slip_adiabatic()\&.
.SS "subroutine metricops::pointeigenvectorsgs (integer(kind=4), intent(in) numDim, real(kind=8), dimension(numdim*numdim), intent(in) pointMetric, real(kind=8), dimension(numdim*numdim), intent(out) eigenVectors, real(kind=8), dimension(numdim*numdim), intent(out) eigenComponents)"

.PP
Definition at line 453 of file MetricOps\&.f90\&.
.PP
References vdot()\&.
.PP
Referenced by roe::eigenmatrices()\&.
.SS "real(kind=8) function metricops::vdot (integer(kind=4), intent(in) numDim, real(kind=8), dimension(numdim), intent(in) u, real(kind=8), dimension(numdim), intent(in) v)"

.PP
Definition at line 433 of file MetricOps\&.f90\&.
.PP
Referenced by pointeigenvectorsgs()\&.
.SS "subroutine metricops::vhatcomponent (integer(kind=4), intent(in) numDim, integer(kind=8), intent(in) numPointsBuffer, integer(kind=8), dimension(numdim), intent(in) bufferSizes, integer(kind=8), dimension(2*numdim), intent(in) opInterval, integer(kind=4), intent(in) gridType, real(kind=8), dimension(numdim*numdim*numpointsbuffer), intent(in), target gridMetric, integer(kind=4), intent(in) velDir, real(kind=8), dimension(numdim*numpointsbuffer), intent(in), target velocity, real(kind=8), dimension(numpointsbuffer), intent(out) velHatComponent)"

.PP
Definition at line 112 of file MetricOps\&.f90\&.
.PP
References grid::rectilinear, simple::yax(), simple::zxdoty(), and simple::zxy()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for JustKernels from the source code\&.
