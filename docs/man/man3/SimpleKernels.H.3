.TH "SimpleKernels.H" 3 "Fri Apr 10 2020" "Version 1.0" "JustKernels" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SimpleKernels.H \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'FC\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBZAXPY_CUDA\fP (const int *, const size_t *, const size_t *, const size_t *, const double *, const double *, const double *, double *)"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, yavdotwpy, SIMPLE, YAVDOTWPY)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, vasupv, SIMPLE, VASUPV)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, yassmwdotupy, SIMPLE, YASSMWDOTUPY)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, yasmwdotupy, SIMPLE, YASMWDOTUPY)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, yaxpy, SIMPLE, YAXPY)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, ywxpy, SIMPLE, YWXPY)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, zaxpy, SIMPLE, ZAXPY)(const int *"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, zaxpby, SIMPLE, ZAXPBY)(const int *"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, yaxpby, SIMPLE, YAXPBY)(const int *"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, yax, SIMPLE, YAX)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, zxdoty, SIMPLE, ZXDOTY)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, xax, SIMPLE, XAX)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, zxy, SIMPLE, ZXY)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, zaxy, SIMPLE, ZAXY)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, yxy, SIMPLE, YXY)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, zwxpy, SIMPLE, ZWXPY)(int *"
.br
.ti -1c
.RI "void size_t size_t size_t double double double double *void \fBFC_MODULE\fP (simple, zwmxpy, SIMPLE, ZMWXPY)(int *"
.br
.ti -1c
.RI "void size_t size_t size_t double double double double *void size_t size_t size_t double double double double *void \fBFC_MODULE\fP (simple, assignmentyx, SIMPLE, ASSIGNMENTYX)(const int *"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, assignmentxa, SIMPLE, ASSIGNMENTXA)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (simple, assignmentyabsx, SIMPLE, ASSIGNMENTYABSX)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (operators, xaxm1, OPERATORS, XAXM1)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (operators, xam1x, OPERATORS, XAM1X)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (operators, yaxm1, OPERATORS, YAXM1)(const int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (operators, zawpxy, OPERATORS, ZAWPXY)(int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (operators, zvwpxy, OPERATORS, ZVWPXY)(int *\fBnumDim\fP"
.br
.ti -1c
.RI "void \fBFC_MODULE\fP (operators, zxym1, OPERATORS, ZXYM1)(const int *\fBnumDim\fP"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "void const size_t * \fBnumPoints\fP"
.br
.ti -1c
.RI "void const size_t const size_t * \fBbufferSize\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t * \fBbufferInterval\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double * \fBa\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double * \fBV\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double const double * \fBW\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double const double double * \fBY\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double * \fBS\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double const double * \fBU\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double * \fBs1\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double const double * \fBs2\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double * \fBX\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t * \fBopInterval\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double * \fBw\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double * \fBx\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double double * \fBy\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double const double double * \fBz\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const double const double const double * \fBb\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const int * \fBnumComponents\fP"
.br
.ti -1c
.RI "void const size_t const size_t const size_t const int const double const double double * \fBZ\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void FC_MODULE (simple, yavdotwpy, SIMPLE, YAVDOTWPY) const"

.SS "void FC_MODULE (simple, vasupv, SIMPLE, VASUPV) const"

.SS "void FC_MODULE (simple, yassmwdotupy, SIMPLE, YASSMWDOTUPY) const"

.SS "void FC_MODULE (simple, yasmwdotupy, SIMPLE, YASMWDOTUPY) const"

.SS "void FC_MODULE (simple, yaxpy, SIMPLE, YAXPY) const"

.SS "void FC_MODULE (simple, ywxpy, SIMPLE, YWXPY) const"

.SS "void FC_MODULE (simple, zaxpy, SIMPLE, ZAXPY) const"

.SS "void FC_MODULE (simple, zaxpby, SIMPLE, ZAXPBY) const"

.SS "void FC_MODULE (simple, yaxpby, SIMPLE, YAXPBY) const"

.SS "void FC_MODULE (simple, yax, SIMPLE, YAX) const"

.SS "void FC_MODULE (simple, zxdoty, SIMPLE, ZXDOTY) const"

.SS "void FC_MODULE (simple, xax, SIMPLE, XAX) const"

.SS "void FC_MODULE (simple, zxy, SIMPLE, ZXY) const"

.SS "void FC_MODULE (simple, zaxy, SIMPLE, ZAXY) const"

.SS "void FC_MODULE (simple, yxy, SIMPLE, YXY) const"

.SS "void FC_MODULE (simple, zwxpy, SIMPLE, ZWXPY)"

.SS "void size_t size_t size_t double double double double* void FC_MODULE (simple, zwmxpy, SIMPLE, ZMWXPY)"

.SS "void size_t size_t size_t double double double double* void size_t size_t size_t double double double double* void FC_MODULE (simple, assignmentyx, SIMPLE, ASSIGNMENTYX) const"

.SS "void FC_MODULE (simple, assignmentxa, SIMPLE, ASSIGNMENTXA) const"

.SS "void FC_MODULE (simple, assignmentyabsx, SIMPLE, ASSIGNMENTYABSX) const"

.SS "void FC_MODULE (operators, xaxm1, OPERATORS, XAXM1) const"

.SS "void FC_MODULE (operators, xam1x, OPERATORS, XAM1X) const"

.SS "void FC_MODULE (operators, yaxm1, OPERATORS, YAXM1) const"

.SS "void FC_MODULE (operators, zawpxy, OPERATORS, ZAWPXY)"

.SS "void FC_MODULE (operators, zvwpxy, OPERATORS, ZVWPXY)"

.SS "void FC_MODULE (operators, zxym1, OPERATORS, ZXYM1) const"

.SS "void ZAXPY_CUDA (const int *, const size_t *, const size_t *, const size_t *, const double *, const double *, const double *, double *)"

.SH "Variable Documentation"
.PP 
.SS "void size_t size_t size_t double * a"

.PP
Definition at line 12 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const double const double const double * b"

.PP
Definition at line 43 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t* bufferInterval"

.PP
Definition at line 12 of file SimpleKernels\&.H\&.
.SS "void size_t size_t * bufferSize"

.PP
Definition at line 12 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const int* numComponents"

.PP
Definition at line 53 of file SimpleKernels\&.H\&.
.SS "void const size_t* numPoints"

.PP
Definition at line 12 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t* opInterval"

.PP
Definition at line 36 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const double const double* S"

.PP
Definition at line 17 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const double const double * s1"

.PP
Definition at line 22 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const double const double const double* s2"

.PP
Definition at line 22 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const double const double const double const double * U"

.PP
Definition at line 17 of file SimpleKernels\&.H\&.
.SS "void size_t size_t size_t double * V"

.PP
Definition at line 12 of file SimpleKernels\&.H\&.
.SS "void size_t size_t size_t double double * W"

.PP
Definition at line 12 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const double* w"

.PP
Definition at line 36 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const double * X"

.PP
Definition at line 32 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const double double * x"

.PP
Definition at line 36 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const double const double * Y"

.PP
Definition at line 12 of file SimpleKernels\&.H\&.
.SS "void size_t size_t size_t double double double double *void size_t size_t size_t double double double double *void const size_t const size_t const size_t const double double * y"

.PP
Definition at line 36 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const double const double const double const double double * z"

.PP
Definition at line 40 of file SimpleKernels\&.H\&.
.SS "void const size_t const size_t const size_t const double const double double * Z"

.PP
Definition at line 53 of file SimpleKernels\&.H\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for JustKernels from the source code\&.
