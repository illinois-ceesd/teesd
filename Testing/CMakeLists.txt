
#ADD_TEST(TestSetup ${RUNTEST} -f ${CMAKE_CURRENT_SOURCE_DIR}/Scripts/test_setup.sh -s ${CMAKE_CURRENT_SOURCE_DIR} -b ${CMAKE_BINARY_DIR}/bin -o setup.txt)
FILE(READ ${CMAKE_CURRENT_SOURCE_DIR}/testdirectory.txt testPaths)
STRING(REGEX REPLACE "\n" " " testPathList ${testPaths})
SEPARATE_ARGUMENTS(testPathList)

FOREACH(TEST_SUBDIR ${testPathList})
  
  SET(TEST_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/${TEST_SUBDIR})
  IF(IS_DIRECTORY ${TEST_DIRECTORY}) 
    IF(EXISTS ${TEST_DIRECTORY}/testlist.txt )
      MESSAGE(STATUS "${Blue}${PROJECT_NAME}: Discovering tests in ${TEST_DIRECTORY}...${ColorReset}")
      FILE(READ ${TEST_DIRECTORY}/testlist.txt dirTests)
      STRING(REGEX REPLACE "\n" " " testList ${dirTests})
      SEPARATE_ARGUMENTS(testList)
      
      FOREACH(testName ${testList})
        SET(TEST_NAME ${TEST_SUBDIR}:${testName})
        IF(SHOWTESTS) 
          MESSAGE(STATUS "${Cyan}${PROJECT_NAME}:\t Adding test: ${TEST_NAME}${ColorReset}")
        ENDIF()
        ADD_TEST(${TEST_NAME} python ${TEST_DIRECTORY}/${testName}.py
          ${CMAKE_SOURCE_DIR} ${CMAKE_BINARY_DIR})
        SET_TESTS_PROPERTIES(${TEST_NAME} PROPERTIES ENVIRONMENT
          "PYTHONPATH=${PROJECT_BINARY_DIR}/PyJuKe:$ENV{PYTHONPATH}")
        IF(${testName} MATCHES "FAILS")
          SET_TESTS_PROPERTIES(${TEST_NAME} PROPERTIES WILL_FAIL TRUE)
        ENDIF()
      ENDFOREACH()
    ELSE()
      MESSAGE(STATUS "${BoldYellow}${PROJECT_NAME}: Warning: ${TEST_DIRECTORY}/testlist.txt not found.${ColorReset}")  
    ENDIF()
  ELSE()
    MESSAGE(STATUS "${BoldYellow}${PROJECT_NAME}: Warning: Serial test suite ${TEST_DIRECTORY} not found.${ColorReset}")
  ENDIF()
ENDFOREACH()

FILE(READ ${CMAKE_CURRENT_SOURCE_DIR}/Parallel/parallelsuites.txt suitePaths)
STRING(REGEX REPLACE "\n" " " suitePathList ${suitePaths})
SEPARATE_ARGUMENTS(suitePathList)

FOREACH(SUITE_SUBDIR ${suitePathList})
  
  SET(SUITENAME ${SUITE_SUBDIR})
  SET(SUITE_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/Parallel/${SUITE_SUBDIR}")
  SET(SETUPNAME "Parallel:${SUITENAME}:Setup")
  SET(RUNSUITE "Parallel:${SUITENAME}:Run")
  SET(FIXTURENAME "Parallel_${SUITENAME}_Fixture")
  SET(RESULTSFILE "${PROJECT_BINARY_DIR}/Testing/parallel_${SUITENAME}_results.txt")
  ADD_TEST(
    NAME ${SETUPNAME}
    COMMAND python ${CMAKE_SOURCE_DIR}/utils/PyJuKe/generate_suite_runner.py ${SUITENAME} ${SUITE_DIRECTORY} ${PROJECT_BINARY_DIR}/Testing)
  SET_TESTS_PROPERTIES(${SETUPNAME} PROPERTIES FIXTURES_SETUP ${FIXTURENAME})
  SET_TESTS_PROPERTIES(${SETUPNAME} PROPERTIES ENVIRONMENT
    "PYTHONPATH=${PROJECT_BINARY_DIR}/PyJuKe:$ENV{PYTHONPATH}")
  ADD_TEST(
    NAME ${RUNSUITE}
    COMMAND ${PROJECT_BINARY_DIR}/Testing/parallel_${SUITENAME}.sh)
  SET_TESTS_PROPERTIES(${RUNSUITE} PROPERTIES FIXTURES_SETUP ${FIXTURENAME})
  SET_TESTS_PROPERTIES(${RUNSUITE} PROPERTIES DEPENDS ${SETUPNAME})
  IF(EXISTS ${SUITE_DIRECTORY}/testlist.txt )
    MESSAGE(STATUS "${Blue}${PROJECT_NAME}: Discovering test suite in ${SUITE_DIRECTORY}...${ColorReset}")
    FILE(READ ${SUITE_DIRECTORY}/testlist.txt dirTests)
    STRING(REGEX REPLACE "\n" " " testList ${dirTests})
    SEPARATE_ARGUMENTS(testList)

    FOREACH(testName ${testList})
      SET(FULL_TESTNAME "Parallel:${SUITENAME}:${testName}")
      IF(SHOWTESTS) 
        MESSAGE(STATUS "${Cyan}${PROJECT_NAME}:\t Adding parallel test: ${FULL_TESTNAME}${ColorReset}")
      ENDIF()
      ADD_TEST(
        NAME ${FULL_TESTNAME}
        COMMAND python ${CMAKE_SOURCE_DIR}/utils/PyJuKe/CheckTest.py ${testName} ${RESULTSFILE})
      SET_TESTS_PROPERTIES(${FULL_TESTNAME} PROPERTIES ENVIRONMENT
        "PYTHONPATH=${PROJECT_BINARY_DIR}/PyJuKe:$ENV{PYTHONPATH}")
      SET_TESTS_PROPERTIES(${FULL_TESTNAME} PROPERTIES FIXTURES_REQUIRED ${SETUPNAME})
      IF(${testName} MATCHES "FAILS")
        SET_TESTS_PROPERTIES(${FULL_TESTNAME} PROPERTIES WILL_FAIL TRUE)
      ENDIF()
    ENDFOREACH()
  ELSE()
    MESSAGE(STATUS "${BoldYellow}${PROJECT_NAME}: Warning: Parallel ${SUITE_DIRECTORY}/testlist.txt not found.${ColorReset}")  
  ENDIF()
  
ENDFOREACH()
